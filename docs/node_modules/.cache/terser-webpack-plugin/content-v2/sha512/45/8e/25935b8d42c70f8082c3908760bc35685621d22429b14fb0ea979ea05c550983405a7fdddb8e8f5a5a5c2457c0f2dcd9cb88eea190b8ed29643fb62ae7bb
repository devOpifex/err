{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{366:function(t,a,s){\"use strict\";s.r(a);var e=s(42),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"get-started\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#get-started\"}},[t._v(\"#\")]),t._v(\" Get Started\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"basics\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#basics\"}},[t._v(\"#\")]),t._v(\" Basics\")]),t._v(\" \"),s(\"p\",[t._v(\"The two core functions of the package are \"),s(\"code\",[t._v(\"e\")]),t._v(\" and \"),s(\"code\",[t._v(\"w\")]),t._v(\", the former creates and error and the latter a warning.\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-r extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-r\"}},[s(\"code\",[t._v(\"e\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"erratum!\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),s(\"div\",{staticClass:\"language-r extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-r\"}},[s(\"code\",[t._v(\"erratum\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"!\")]),t._v(\"\\n\")])])]),s(\"p\",[t._v(\"Note that this printed the error message (with \"),s(\"code\",[t._v(\"cat\")]),t._v(\") and thus does not actually stops code execution. However, \"),s(\"code\",[t._v(\"e\")]),t._v(\" can stop code execution with the \"),s(\"code\",[t._v(\"stop\")]),t._v(\" or \"),s(\"code\",[t._v(\"fatal\")]),t._v(\" method (different names, identical execution).\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-r extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-r\"}},[s(\"code\",[t._v(\"err \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<-\")]),t._v(\" e\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"erratum!\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\nerr\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"$\")]),t._v(\"fatal\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"Error: erratum!\\n\")])])]),s(\"p\",[t._v(\"Similar for warnings, use \"),s(\"code\",[t._v(\"w\")]),t._v(\" to create a warning object and use the \"),s(\"code\",[t._v(\"warn\")]),t._v(\" method to throw an actual \"),s(\"code\",[t._v(\"warning\")]),t._v(\".\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-r extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-r\"}},[s(\"code\",[t._v(\"www \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<-\")]),t._v(\" w\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"attention!\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\nwww\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"$\")]),t._v(\"warn\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"Warning message:\\nattention! \\n\")])])]),s(\"p\",[t._v(\"If you want to retrieve the message as a string to process it differently you can use the \"),s(\"code\",[t._v(\"message\")]),t._v(\" method.\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-r extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-r\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"string \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<-\")]),t._v(\" www\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"$\")]),t._v(\"message\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\nclass\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"string\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v('[1] \"attention!\"\\n[1] \"character\"\\n')])])]),s(\"h2\",{attrs:{id:\"standardisation\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#standardisation\"}},[t._v(\"#\")]),t._v(\" Standardisation\")]),t._v(\" \"),s(\"p\",[t._v(\"Erratum treats errors and warning as objects. This, amongst other things, allows for easy standardisation of messages.\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-r extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-r\"}},[s(\"code\",[t._v(\"library\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"erratum\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\nerr \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<-\")]),t._v(\" e\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Input must be a numeric\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\nadd_ \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<-\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"x\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"!\")]),t._v(\"is.numeric\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"x\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n    err\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"$\")]),t._v(\"stop\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n  x \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\nlog_ \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<-\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"x\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"!\")]),t._v(\"is.numeric\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"x\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n    err\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"$\")]),t._v(\"stop\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n  log\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"x\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\nadd_\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"one\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\nlog_\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"two\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"Error: Input must be a numeric\\nError: Input must be a numeric\\n\")])])]),s(\"h2\",{attrs:{id:\"templating\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#templating\"}},[t._v(\"#\")]),t._v(\" Templating\")]),t._v(\" \"),s(\"p\",[t._v(\"You can create a template that will be used to print errors and warnings. Make sure it includes \"),s(\"code\",[t._v(\"%s\")]),t._v(\": the warning or error message.\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-{r} extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v('template.e(\"Whoops: %s - sorry!\")\\n\\ne(\"Sumin\\' went wrong\")\\n')])])]),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"Whoops: Sumin' went wrong - sorry!\\n\")])])]),s(\"p\",[t._v(\"Note that it supports \"),s(\"a\",{attrs:{href:\"https://github.com/r-lib/crayon\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"crayon\"),s(\"OutboundLink\")],1),t._v(\".\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-{r} extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v('template.e(crayon::red(\"%s\"))\\n\\ne(\"Sumin\\' went wrong\")\\n')])])]),s(\"p\",[t._v(\"These can be reset by simply re-running the respective template function.\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-{r} extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"template.e()\\n\")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);","extractedComments":[]}